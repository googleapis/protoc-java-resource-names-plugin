// (-- Library API for toolkit testing purposes --)

syntax = "proto3";

package google.example.library.v1;

import "google/api/annotations.proto";

option java_multiple_files = true;
option java_outer_classname = "LibraryArchiveProto";
option java_package = "com.google.example.library.v1";

service LibraryArchiveService {

  // Gets a book from an archive.
  rpc GetBookFromArchive(GetBookFromArchiveRequest) returns (BookFromArchive) {
    option (google.api.http) = { get: "/v1/{name=archives/*/books/*}"};
  }

  // Gets a book from a shelf or archive.
  rpc GetBookFromAnywhere(GetBookFromAnywhereRequest) returns (BookFromAnywhere) {
    option (google.api.http) = { get: "/v1/{name=archives/*/books/**}"};
  }
}

// A single book in the archives.
message BookFromArchive {
  // The resource name of the book.
  // Book names have the form `archives/{archive_id}/books/{book_id}`.
  string name = 1;

  // The name of the book author.
  string author = 2;

  // The title of the book.
  string title = 3;

  // Value indicating whether the book has been read.
  bool read = 4;
}

// A single book in the archives or library.
message BookFromAnywhere {
  // The resource name of the book.
  // Book names have the form `bookShelves/{shelf_id}/books/{book_id}` or
  // `archives/{archive_id}/books/{book_id}`.
  string name = 1;

  // The name of the book author.
  string author = 2;

  // The title of the book.
  string title = 3;

  // Value indicating whether the book has been read.
  bool read = 4;
}

// Request message for LibraryService.GetBookFromArchive.
message GetBookFromArchiveRequest {
  // The name of the book to retrieve.
  string name = 1;
}

// Request message for LibraryService.GetBookFromAnywhere.
message GetBookFromAnywhereRequest {
  // The name of the book to retrieve.
  string name = 1;
}
