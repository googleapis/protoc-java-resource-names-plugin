// (-- Library API for toolkit testing purposes --)

syntax = "proto3";

package google.example.library.v1;

import "google/api/annotations.proto";
import "google/api/resource.proto";

option java_multiple_files = true;
option java_outer_classname = "LibraryProto";
option java_package = "com.google.example.library.v1";

option (google.api.resource_definition) = {
  type: "library.googleapis.com/Publisher",
  pattern: "projects/{project}/locations/{location}/publishers/{publisher}"
};

service LibraryService {

  // Creates a shelf, and returns the new Shelf.
  rpc CreateShelf(CreateShelfRequest) returns (Shelf) {
    option (google.api.http) = { post: "/v1/bookShelves" body: "shelf" };
  }

  // Gets a shelf.
  rpc GetShelf(GetShelfRequest) returns (Shelf) {
    option (google.api.http) = { get: "/v1/{name=bookShelves/*}" };
  }

  // Creates a book.
  rpc CreateBook(CreateBookRequest) returns (Book) {
    option (google.api.http) = { post: "/v1/{name=bookShelves/*}/books" body: "book" };
  }

  // Gets a book.
  rpc GetBook(GetBookRequest) returns (Book) {
    option (google.api.http) = { get: "/v1/{name=bookShelves/*/books/*}" };
  }

  // Lists books in a shelf.
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    option (google.api.http) = { get: "/v1/{name=bookShelves/*}/books" };
  }

  // Lists books in a shelf.
  rpc ListShelves(ListShelvesRequest) returns (ListShelvesResponse) {
    option (google.api.http) = { get: "/v1/{name=projects/*}/shelves" };
  }

    // Creates a series of books.
  rpc PublishSeries(PublishSeriesRequest) returns (PublishSeriesResponse) {
    option (google.api.http) = {
      post: "/v1:publish"
      body: "*"
      additional_bindings: {
        post: "/v1/{shelf.name=shelves/*}:publish"
        body: "*"
      }
    };
  }
}

// A single book in the library.
message Book {
  option (google.api.resource) = {
    type: "library.googleapis.com/Book",
    pattern: "projects/{project}/shelves/{shelf}/books/{book}",
    pattern: "archives/{archive}/books/{book}",
    pattern: "_deleted-book_",
    history: ORIGINALLY_SINGLE_PATTERN
  };
  // The resource name of the book.
  // Book names have the form `bookShelves/{shelf_id}/books/{book_id}`.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Book"
  ];

  // The name of the book author.
  string author = 2;
}

// A Shelf contains a collection of books with a theme.
message Shelf {
  option (google.api.resource) = {
    type: "library.googleapis.com/Shelf",
    pattern: "projects/{project}/shelves/{shelf}"
  };
  // The resource name of the shelf.
  // Shelf names have the form `bookShelves/{shelf_id}`.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Shelf"
  ];

  // The theme of the shelf
  string theme = 2;
}

// Request message for LibraryService.CreateShelf.
message CreateShelfRequest {
  // The shelf to create.
  Shelf shelf = 1;
}

// Request message for LibraryService.GetShelf.
message GetShelfRequest {
  // The name of the shelf to retrieve.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Shelf"
  ];

  string parent = 2 [
    (google.api.resource_reference).child_type = "locations.googleapis.com/Location"];

  // To test 'options' parameter name conflict.
  string options = 4;
}

// Request message for LibraryService.CreateBook.
message CreateBookRequest {
  // The name of the shelf in which the book is created.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Shelf"
  ];

  // The book to create.
  Book book = 2;
}

message GetBookRequest {
  // The name of the book to retrieve.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Book"
  ];

  string place = 2 [
    (google.api.resource_reference).type = "locations.googleapis.com/Location"];

  string folder = 3 [
    (google.api.resource_reference).type = "cloudresourcemanager.googleapis.com/Folder"];
}

// Request message for LibraryService.ListBooks.
message ListBooksRequest {
  // The name of the shelf whose books we'd like to list.
  string name = 1 [
    (google.api.resource_reference).type = "library.googleapis.com/Shelf"
  ];

  // Requested page size. Server may return fewer books than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListBooksResponse.next_page_token][google.example.library.v1.ListBooksResponse.next_page_token].
  // returned from the previous call to `ListBooks` method.
  string page_token = 3;

  // To test python built-in wrapping.
  string filter = 4;
}

// Response message for LibraryService.ListBooks.
message ListBooksResponse {
  // The list of books.
  repeated Book books = 1;

  // A token to retrieve next page of results.
  // Pass this value in the
  // [ListBooksRequest.page_token][google.example.library.v1.ListBooksRequest.page_token]
  // field in the subsequent call to `ListBooks` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}


// Request message for LibraryService.ListBooks.
message ListShelvesRequest {
  // The name of the project whose shelves we'd like to list.
  string name = 1 [
    (google.api.resource_reference).child_type = "library.googleapis.com/Shelf"
  ];

  // Requested page size. Server may return fewer shelves than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results the server should return.
  // Typically, this is the value of
  // [ListShelvesResponse.next_page_token][google.example.library.v1.ListShelvesResponse.next_page_token].
  // returned from the previous call to `ListShelves` method.
  string page_token = 3;
}

// Response message for LibraryService.ListBooks.
message ListShelvesResponse {
  // The list of books.
  repeated Shelf books = 1;

  // A token to retrieve next page of results.
  // Pass this value in the
  // [ListShelvesRequest.page_token][google.example.library.v1.ListShelvesRequest.page_token]
  // field in the subsequent call to `ListShelves` method to retrieve the next
  // page of results.
  string next_page_token = 2;
}

// Request message for LibraryService.PublishSeries.
message PublishSeriesRequest {
  // The shelf in which the series is created.
  Shelf shelf = 1;

  // The books to publish in the series.
  repeated Book books = 2;

  oneof versioning {
    // The edition of the series
    uint32 edition = 3;

    // If the book is in a pre-publish state
    bool review_copy = 4;
  }

  // Uniquely identifies the series to the publishing house.
  SeriesUuid series_uuid = 5;

  // The publisher of the series.
  string publisher = 6 [
    (google.api.resource_reference).type = "library.googleapis.com/Publisher"];
}

// Response message for LibraryService.PublishSeries.
message PublishSeriesResponse {
  // The names of the books in the series that were published
  repeated string book_names = 1;

  repeated Book books = 2;

  // Uniquely identifies the series published
  SeriesUuid series_uuid = 3;
}

message SeriesUuid {
  oneof source {
    bytes series_bytes = 1;
    string series_string = 2;
  }
}

message Archive {
  option (google.api.resource) = {
    type: "library.googleapis.com/Archive",
    pattern: "projects/{project}/locations/{location}/archives/{archive}"
  };

  string name = 1;
}
