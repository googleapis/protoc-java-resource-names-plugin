/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

package com.google.example.library.v1;

import com.google.api.resourcenames.ResourceName;
import com.google.api.resourcenames.ResourceNameType;
import com.google.api.resourcenames.types.BookName;
import com.google.api.resourcenames.types.ArchivedBookName;
import com.google.api.resourcenames.types.UntypedResourceName;
import java.io.IOException;

// AUTO-GENERATED DOCUMENTATION AND CLASS
@javax.annotation.Generated("by GAPIC protoc plugin")
public class BookNameOneof implements ResourceName {

  private final String rawValue;

  public BookName getBookName() {
    return BookName.parse(rawValue);
  }
  public ArchivedBookName getArchivedBookName() {
    return ArchivedBookName.parse(rawValue);
  }

  public UntypedResourceName getUntypedResourceName() {
    return UntypedResourceName.parse(rawValue);
  }

  public ResourceName getValue() {
    if (BookName.isParsableFrom(rawValue)) {
      return getBookName();
    }
    if (ArchivedBookName.isParsableFrom(rawValue)) {
      return getArchivedBookName();
    }
    return getUntypedResourceName();
  }

  public ResourceNameType getType() {
    return getValue().getType();
  }

  private BookNameOneof(String rawValue) {
    this.rawValue = rawValue;
  }

  public static BookNameOneof parse(String formattedString) {
    return new BookNameOneof(formattedString);
  }

  public static BookNameOneof from(BookName bookName) {
    return BookNameOneof.parse(bookName.toString());
  }
  public static BookNameOneof from(ArchivedBookName archivedBookName) {
    return BookNameOneof.parse(archivedBookName.toString());
  }

  public static BookNameOneof fromUntyped(UntypedResourceName untypedResourceName) {
    return BookNameOneof.parse(untypedResourceName.toString());
  }
}

