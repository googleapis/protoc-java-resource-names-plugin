# Copyright 2016, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: resource_name_format.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='resource_name_format.proto',
  package='google.gapic',
  syntax='proto3',
  serialized_pb=_b('\n\x1aresource_name_format.proto\x12\x0cgoogle.gapic\x1a google/protobuf/descriptor.proto\"4\n\x06\x46ormat\x12\x13\n\x0b\x66ormat_name\x18\x01 \x01(\t\x12\x15\n\rformat_string\x18\x02 \x01(\t:D\n\x06\x66ormat\x12\x1c.google.protobuf.FileOptions\x18\xd1\x86\x03 \x03(\x0b\x32\x14.google.gapic.Format:4\n\x0b\x66ormat_name\x12\x1d.google.protobuf.FieldOptions\x18\xd0\x86\x03 \x01(\tB-\n\x10\x63om.google.gapicB\x17ResourceNameFormatProtoP\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


FORMAT_FIELD_NUMBER = 50001
format = _descriptor.FieldDescriptor(
  name='format', full_name='google.gapic.format', index=0,
  number=50001, type=11, cpp_type=10, label=3,
  has_default_value=False, default_value=[],
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
FORMAT_NAME_FIELD_NUMBER = 50000
format_name = _descriptor.FieldDescriptor(
  name='format_name', full_name='google.gapic.format_name', index=1,
  number=50000, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)


_FORMAT = _descriptor.Descriptor(
  name='Format',
  full_name='google.gapic.Format',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='format_name', full_name='google.gapic.Format.format_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='format_string', full_name='google.gapic.Format.format_string', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=130,
)

DESCRIPTOR.message_types_by_name['Format'] = _FORMAT
DESCRIPTOR.extensions_by_name['format'] = format
DESCRIPTOR.extensions_by_name['format_name'] = format_name

Format = _reflection.GeneratedProtocolMessageType('Format', (_message.Message,), dict(
  DESCRIPTOR = _FORMAT,
  __module__ = 'resource_name_format_pb2'
  # @@protoc_insertion_point(class_scope:google.gapic.Format)
  ))
_sym_db.RegisterMessage(Format)

format.message_type = _FORMAT
google_dot_protobuf_dot_descriptor__pb2.FileOptions.RegisterExtension(format)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(format_name)

DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020com.google.gapicB\027ResourceNameFormatProtoP\001'))
# @@protoc_insertion_point(module_scope)
