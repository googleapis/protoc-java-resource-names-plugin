public abstract static class {{oneofNameUpper}}Oneof {
  {{#fields}}
  private static class {{nameUpper}} extends {{oneofNameUpper}}Oneof {
    private final {{type}} {{nameLower}};

    private {{nameUpper}}({{type}} {{nameLower}}) {
      this.{{nameLower}} = {{nameLower}};
    }

    @Override
    void set({{msgNameUpper}}.Builder builder) {
      builder.set{{nameUpper}}({{nameLower}});
    }

    @Override
    public int hashCode() {
      return {{nameLower}}.hashCode();
    }

    @Override
    public boolean equals(Object other) {
      return (other instanceof {{nameUpper}}) && (({{nameUpper}}) other).{{nameLower}}.equals({{nameLower}});
    }
  }
  {{/fields}}

  private {{oneofNameUpper}}Oneof() {}

  abstract void set({{msgNameUpper}}.Builder message);

  {{#fields}}
  public static {{oneofNameUpper}}Oneof {{nameLower}}({{type}} {{nameLower}}) {
    return new {{nameUpper}}({{nameLower}});
  }
  {{/fields}}
}
