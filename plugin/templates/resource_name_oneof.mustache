/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

package {{resourceNameOneofPackageName}};

import {{resourceNameGlobalPackageName}}.ResourceName;
import {{resourceNameGlobalPackageName}}.ResourceNameType;
{{#resourceTypes}}
import {{resourceNameTypePackageName}}.{{resourceTypeClassName}};
{{/resourceTypes}}
import java.io.IOException;

// AUTO-GENERATED DOCUMENTATION AND CLASS
@javax.annotation.Generated("by GAPIC protoc plugin")
public class {{oneofClassName}} implements ResourceName {

  private final String rawValue;

  {{#resourceTypes}}
  public {{resourceTypeClassName}} get{{resourceTypeClassName}}() {
    return {{resourceTypeClassName}}.parse(rawValue);
  }
  {{/resourceTypes}}

  public UntypedResourceName getUntypedResourceName() {
    return UntypedResourceName.parse(rawValue);
  }

  public ResourceName getValue() {
    {{#resourceTypes}}
    if ({{resourceTypeClassName}}.isParsableFrom(rawValue)) {
      return get{{resourceTypeClassName}}();
    }
    {{/resourceTypes}}
    return getUntypedResourceName();
  }

  public ResourceNameType getType() {
    return getValue().getType();
  }

  private {{oneofClassName}}(String rawValue) {
    this.rawValue = rawValue;
  }

  public static {{oneofClassName}} parse(String formattedString) {
    return new {{oneofClassName}}(formattedString);
  }

  {{#resourceTypes}}
  public static {{oneofClassName}} from({{resourceTypeClassName}} {{resourceTypeVarName}}) {
    return {{oneofClassName}}.parse({{resourceTypeVarName}}.toString());
  }
  {{/resourceTypes}}

  public static {{oneofClassName}} fromUntyped(UntypedResourceName untypedResourceName) {
    return BookNameOneOf.parse(untypedResourceName.toString());
  }
}
