/**
 * @deprecated Use the following instead:
 * <pre><code>
 * protoBuilder.set{{fieldNameUpper}}(index, {{resourceTypeVarName}}.toString());
 * </code></pre>
 */
@Deprecated
public Builder set{{fieldNameUpper}}With{{resourceTypeClassName}}(int index, {{resourceTypeFullClassName}} value) {
  if (value == null) {
    return set{{fieldNameUpper}}(index, "");
  }
  return set{{fieldNameUpper}}(index, value.toString());
}

/**
 * @deprecated Use the following instead:
 * <pre><code>
 * protoBuilder.add{{fieldNameUpper}}({{resourceTypeVarName}}.toString());
 * </code></pre>
 */
@Deprecated
public Builder add{{fieldNameUpper}}With{{resourceTypeClassName}}({{resourceTypeFullClassName}} value) {
  if (value == null) {
    return add{{fieldNameUpper}}("");
  }
  return add{{fieldNameUpper}}(value.toString());
}

/**
 * @deprecated Use the following instead:
 * <pre><code>
 * protoBuilder.addAll{{fieldNameUpper}}({{resourceTypeFullClassName}}.toStringList(values));
 * </code></pre>
 */
@Deprecated
public Builder addAll{{fieldNameUpper}}With{{resourceTypeClassName}}List(java.lang.Iterable<{{resourceTypeFullClassName}}> values) {
  java.util.List<java.lang.String> list = new java.util.ArrayList<java.lang.String>();
  for ({{resourceTypeFullClassName}} value : values) {
    if (value == null) {
      list.add("");
    } else {
      list.add(value.toString());
    }
  }
  return addAll{{fieldNameUpper}}(list);
}

/**
 * @deprecated Use the following instead:
 * <pre><code>
 * {{resourceTypeClassName}}.parse(protoBuilder.get{{fieldNameUpper}}(index));
 * </code></pre>
 */
@Deprecated
public {{resourceTypeFullClassName}} get{{fieldNameUpper}}As{{resourceTypeClassName}}(int index) {
  java.lang.String str = get{{fieldNameUpper}}(index);
  if (str.isEmpty()) {
    return null;
  }
  return {{concreteResourceTypeFullClassName}}.parse(str);
}

/**
 * @deprecated Use the following instead:
 * <pre><code>
 * {{resourceTypeClassName}}.parseList(protoBuilder.get{{fieldNameUpper}}List());
 * </code></pre>
 */
@Deprecated
public java.util.List<{{resourceTypeFullClassName}}> get{{fieldNameUpper}}ListAs{{resourceTypeClassName}}List() {
  java.util.List<{{resourceTypeFullClassName}}> list = new java.util.ArrayList<{{resourceTypeFullClassName}}>();
  for (int i = 0; i < get{{fieldNameUpper}}Count(); i++) {
    list.add(get{{fieldNameUpper}}As{{resourceTypeClassName}}(i));
  }
  return list;
}
